generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(HR)
  avatarUrl String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relation to track hired employees processed by this user
  hiredEmployeesProcessed HiredEmployee[]
  
  // Relation to track recruitment form status updates
  recruitmentFormsUpdated RecruitmentForm[] @relation("StatusUpdatedBy")
}

model RecruitmentForm {
  id                 String            @id @default(cuid())
  fullName           String
  birthPlace         String
  birthDate          DateTime
  gender             Gender @default(MALE)
  religion           Religion @default(ISLAM)
  
  // Identity Documents
  ktp                String?            @unique           // 16 digits - National ID
  kk                 String?           @unique           // 16 digits - Family Card (optional)
  npwp               String?           @unique           // 15 digits - Tax ID (optional)
  
  province           Province
  heightCm           Int
  weightKg           Int
  shirtSize          ShirtSize
  safetyShoesSize    SafetyShoesSize
  pantsSize          PantsSize
  address            String
  whatsappNumber     String
  certificate        Certificate[]
  education          EducationLevel
  schoolName         String
  jurusan             String?
  workExperience     String?
  maritalStatus      MaritalStatus
  appliedPosition    Position?          // New field for job position
  status             RecruitmentStatus @default(PENDING)
  documentPhotoUrl   String?           // Cloudinary URLs
  documentCvUrl      String?
  documentKtpUrl     String?
  documentSkckUrl    String?
  documentVaccineUrl String?
  supportingDocsUrl  String?

  experienceLevel    ExperienceLevel?
  
  // Status tracking fields
  statusUpdatedById  String?           // Track who last updated the status
  statusUpdatedBy    User?             @relation("StatusUpdatedBy", fields: [statusUpdatedById], references: [id])
  statusUpdatedAt    DateTime?         // Track when status was last updated
  
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  
  // Relation to HiredEmployee (one-to-one)
  hiredEmployee      HiredEmployee?
}

model HiredEmployee {
  id                    String            @id @default(cuid())
  employeeId            String            @unique // Company employee ID
  
  // Reference to original recruitment form
  recruitmentFormId     String            @unique
  recruitmentForm       RecruitmentForm   @relation(fields: [recruitmentFormId], references: [id])
  
  // Employment details
  hiredPosition         Position          // Final hired position (might differ from applied)
  department            Department
  startDate             DateTime          // First day of work
  probationEndDate      DateTime?         // End of probation period
  employmentStatus      EmploymentStatus  @default(PROBATION)
  contractType          ContractType      @default(PERMANENT)

  
  // Salary and benefits
  basicSalary           Decimal?          @db.Decimal(15,2)
  allowances            Json?             // Store allowances as JSON
  
  // Supervisor/reporting
  supervisorId          String?
  supervisor            HiredEmployee?    @relation("SupervisorSubordinate", fields: [supervisorId], references: [id])
  subordinates          HiredEmployee[]   @relation("SupervisorSubordinate")
  
  // HR processing info
  processedById         String
  processedBy           User              @relation(fields: [processedById], references: [id])
  hiredDate             DateTime          @default(now()) // When the hiring was processed
  
  // Additional employment info
  workLocation          String?
  shiftPattern          ShiftPattern      @default(DAY_SHIFT)
  emergencyContactName  String?
  emergencyContactPhone String?
  
  // Status tracking
  isActive              Boolean           @default(true)
  terminationDate       DateTime?
  terminationReason     String?
  
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  
  @@index([employeeId])
  @@index([department])
  @@index([employmentStatus])
  @@index([startDate])
}

enum Role {
  ADMIN
  HR
  MANAGEMENT
  VIEWS_ONLY
}

enum Position {
  PROD_ENG_SPV
  PRODUCTION_GROUP_LEADER
  MOCO_LEADER
  CCR_ADMIN
  DRIVER_DOUBLE_TRAILER
  WEIGHT_BRIDGE_ADMIN
  SIDE_DUMP_SPOTTER
  PLAN_SPV
  LOGISTIC_SPV
  PLANNER
  PLANT_GROUP_LEADER
  TYRE_GROUP_LEADER
  LOGISTIC_GROUP_LEADER
  MECHANIC_JR
  MECHANIC_SR
  WELDER
  ELECTRICIAN
  TYREMAN
  FABRICATION
  OPERATOR_FUEL_TRUCK
  PLANT_ADMIN
  TYRE_ADMIN
  LOGISTIC_ADMIN
  HSE_SPV
  SAFETY_OFFICER
  ENVIRONMENT_OFFICER
  PARAMEDIC
  HSE_ADMIN
  HR_GROUP_LEADER // dirubah dari HRGA_GROUP_LEADER updated on 2025-09-02
  GA_GROUP_LEADER
  PDCA_OFFICER
  PURCHASING_SPV
  IT_SUPPORT
  DOCTOR
  DEPT_HEAD_PRODUCTION_ENGINEERING
  HRGA_SPV
  MECHANIC_INSTRUCTOR
  DEPT_HEAD_PLANT_LOGISTIC
  OPERATOR_WATER_TRUCK
  OPERATOR_CRANE_TRUCK
  HRGA_ADMIN
  CAMP_SERVICE_TECHNICIAN
  CAMP_SERVICE_HELPER
  DEPT_HEAD_HRGA
  TRAINER_MECHANIC
  TRAINER_DOUBLE_TRAILER
  GA_INFRASTRUCTURE
  TOOLKEEPER
  MECHANIC_MAGANG //updated on 2025-09-02
  HRGA_OFFICER //updated on 2025-09-02
  DRIVER_SARANA //updated on 2025-09-02
  DRIVER_LV //updated on 2025-09-02
  DEPT_HEAD_HSE //updated on 2025-09-09 PUSHED
  PROCUREMENT_OFFICER //updated on 2025-09-22 PUSHED
}

enum Department {
  PRODUCTION_ENGINEERING
  OPERATIONAL
  PLANT
  LOGISTIC
  HUMAN_RESOURCES_GA
  HEALTH_SAFETY_ENVIRONMENT
  PURCHASING
  INFORMATION_TECHNOLOGY
  MEDICAL
  TRAINING_DEVELOPMENT
}

enum EmploymentStatus {
  PROBATION
  PERMANENT
  CONTRACT
  TERMINATED
  RESIGNED
}

enum ContractType {
  PERMANENT
  CONTRACT
  INTERNSHIP
}

enum ShiftPattern {
  DAY_SHIFT
  NIGHT_SHIFT
  ROTATING
  FLEXIBLE
}

enum Province {
  ACEH
  SUMATERA_UTARA
  SUMATERA_BARAT
  RIAU
  JAMBI
  SUMATERA_SELATAN
  BENGKULU
  LAMPUNG
  KEP_BANGKA_BELITUNG
  KEP_RIAU
  DKI_JAKARTA
  JAWA_BARAT
  JAWA_TENGAH
  DI_YOGYAKARTA
  JAWA_TIMUR
  BANTEN
  BALI
  NUSA_TENGGARA_BARAT
  NUSA_TENGGARA_TIMUR
  KALIMANTAN_BARAT
  KALIMANTAN_TENGAH
  KALIMANTAN_SELATAN
  KALIMANTAN_TIMUR
  KALIMANTAN_UTARA
  SULAWESI_UTARA
  SULAWESI_TENGAH
  SULAWESI_SELATAN
  SULAWESI_TENGGARA
  GORONTALO
  SULAWESI_BARAT
  MALUKU
  MALUKU_UTARA
  PAPUA
  PAPUA_BARAT
}

enum ShirtSize {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
}

enum SafetyShoesSize {
  SIZE_38
  SIZE_39
  SIZE_40
  SIZE_41
  SIZE_42
  SIZE_43
  SIZE_44
}

enum PantsSize {
  SIZE_28
  SIZE_29
  SIZE_30
  SIZE_31
  SIZE_32
  SIZE_33
  SIZE_34
  SIZE_35
  SIZE_36
}

enum Gender{
  MALE
  FEMALE
}

enum Religion{
  ISLAM
  PROTESTAN
  KATHOLIK
  HINDU
  BUDDHA
  KONGHUCU
}

enum Certificate {
  AHLI_K3
  SIM_A
  SIM_B_I
  SIM_B_II
  SIM_C
  SIM_D
  PENGAWAS_OPERASIONAL_PERTAMA
  PENGAWAS_OPERASIONAL_MADYA
  PENGAWAS_OPERASIONAL_UTAMA
  BASIC_MECHANIC_COURSE
  TRAINING_OF_TRAINER
  OPERATOR_FORKLIFT
  SURAT_IZIN_OPERATOR_FORKLIFT
  OPERATOR_CRANE
  OPERATOR_FUEL_TRUCK
  SERTIFIKAT_VAKSIN
  SERTIFIKAT_LAINNYA
  SERTIFIKASI_KONSTRUKSI
  KIMPER
  SIMPER
  PLB3
  RIGGER
  SMKP
  AHLI_K3_LISTRIK
  SURAT_TANDA_REGISTRASI
  K3_LINGKUNGAN
  WELDER_KEMENKER
  WELDER_BNSP
  NONE
}

enum EducationLevel {
  SD
  SMP
  SMA
  SMK
  D3
  D4
  S1
  S2
  S3
}

enum MaritalStatus {
 TK0
 TK1
 TK2
 TK3
 K0
 K1
 K2
 K3
K_I_0
K_I_1
K_I_2
K_I_3
}

enum RecruitmentStatus {
  PENDING
  ON_PROGRESS
  INTERVIEW
  PSIKOTEST
  USER_INTERVIEW
  MEDICAL_CHECKUP
  MEDICAL_FOLLOWUP
  REJECTED
  COMPLETED
  HIRED // Added new status for when someone is hired
}

enum ExperienceLevel {
  FRESH_GRADUATED
  EXPERIENCED
}